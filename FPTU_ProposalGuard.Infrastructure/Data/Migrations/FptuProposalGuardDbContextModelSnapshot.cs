// <auto-generated />
using System;
using FPTU_ProposalGuard.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FPTU_ProposalGuard.Infrastructure.Data.Migrations
{
    [DbContext(typeof(FptuProposalGuardDbContext))]
    partial class FptuProposalGuardDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notification_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by_id");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit")
                        .HasColumnName("is_read");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<Guid?>("RecipientId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("recipient_id");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.HasKey("NotificationId")
                        .HasName("PK_Notification_NotificationId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("RecipientId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.ProjectProposal", b =>
                {
                    b.Property<int>("ProjectProposalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("project_proposal_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectProposalId"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("abbreviation");

                    b.Property<Guid?>("ApproverId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("approver_id");

                    b.Property<string>("ContextText")
                        .IsRequired()
                        .HasColumnType("ntext")
                        .HasColumnName("context_text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("created_by");

                    b.Property<DateOnly>("DurationFrom")
                        .HasColumnType("date")
                        .HasColumnName("duration_from");

                    b.Property<DateOnly>("DurationTo")
                        .HasColumnType("date")
                        .HasColumnName("duration_to");

                    b.Property<string>("EngTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("eng_title");

                    b.Property<string>("FunctionalRequirements")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("functional_requirements");

                    b.Property<string>("KindsOfPerson")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("kinds_of_person");

                    b.Property<string>("MainProposalContent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("main_proposal_content");

                    b.Property<string>("Profession")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("profession");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int")
                        .HasColumnName("semester_id");

                    b.Property<string>("SolutionText")
                        .IsRequired()
                        .HasColumnType("ntext")
                        .HasColumnName("solution_text");

                    b.Property<string>("SpecialtyCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("specialty_code");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<Guid>("SubmitterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("submitter_id");

                    b.Property<string>("SupervisorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("supervisor_name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("updated_by");

                    b.Property<string>("VieTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vie_title");

                    b.HasKey("ProjectProposalId")
                        .HasName("PK_ProjectProposal_ProjectProposalId");

                    b.HasIndex("ApproverId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SubmitterId");

                    b.HasIndex(new[] { "EngTitle" }, "IX_ProjectProposal_EngTitle");

                    b.HasIndex(new[] { "VieTitle" }, "IX_ProjectProposal_VieTitle");

                    b.ToTable("Project_Proposal", (string)null);
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.ProposalHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("history_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<string>("NewStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("new_status");

                    b.Property<string>("OldStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("old_status");

                    b.Property<Guid>("ProcessById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("process_by_id");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnType("datetime")
                        .HasColumnName("process_date");

                    b.Property<int>("ProjectProposalId")
                        .HasColumnType("int")
                        .HasColumnName("project_proposal_id");

                    b.HasKey("HistoryId")
                        .HasName("PK_ProposalHistory_HistoryId");

                    b.HasIndex("ProcessById");

                    b.HasIndex("ProjectProposalId");

                    b.ToTable("Proposal_History", (string)null);
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.ProposalSimilarity", b =>
                {
                    b.Property<int>("SimilarityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("similarity_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SimilarityId"));

                    b.Property<DateTime>("CheckedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("checked_on");

                    b.Property<int>("CheckedProposalId")
                        .HasColumnType("int")
                        .HasColumnName("checked_proposal_id");

                    b.Property<decimal>("ContextScore")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("context_score");

                    b.Property<int>("ExistingProposalId")
                        .HasColumnType("int")
                        .HasColumnName("existing_proposal_id");

                    b.Property<decimal>("OverallScore")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("overall_score");

                    b.Property<decimal>("SolutionScore")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("solution_score");

                    b.Property<decimal>("TitleScore")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("title_score");

                    b.HasKey("SimilarityId")
                        .HasName("PK_ProposalSimilarity_SimilarityId");

                    b.HasIndex("CheckedProposalId");

                    b.HasIndex("ExistingProposalId");

                    b.ToTable("Proposal_Similarity", (string)null);
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.ProposalStudent", b =>
                {
                    b.Property<int>("ProjectProposalId")
                        .HasColumnType("int")
                        .HasColumnName("project_proposal_id");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone");

                    b.Property<string>("RoleInGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_in_group");

                    b.Property<string>("StudentCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("student_code");

                    b.HasKey("ProjectProposalId")
                        .HasName("PK_ProposalStudent_ProposalId");

                    b.ToTable("Proposal_Student", (string)null);
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.ProposalSupervisor", b =>
                {
                    b.Property<int>("ProjectProposalId")
                        .HasColumnType("int")
                        .HasColumnName("project_proposal_id");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone");

                    b.Property<string>("SupervisorNo")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("supervisor_no");

                    b.Property<string>("TitlePrefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("title_prefix");

                    b.HasKey("ProjectProposalId")
                        .HasName("PK_ProposalSupervisor_ProposalId");

                    b.ToTable("Proposal_Supervisor", (string)null);
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("expiry_date");

                    b.Property<int>("RefreshCount")
                        .HasColumnType("int")
                        .HasColumnName("refresh_count");

                    b.Property<string>("RefreshTokenId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("refresh_token_id");

                    b.Property<string>("TokenId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("token_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("Pk_RefreshToken_Id");

                    b.HasIndex("UserId");

                    b.ToTable("Refresh_Token", (string)null);
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.Semester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("semester_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterId"));

                    b.Property<string>("SemesterCode")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)")
                        .HasColumnName("semester_code");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("term");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("SemesterId")
                        .HasName("PK_Semester_SemesterId");

                    b.ToTable("Semester", (string)null);
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.SystemMessage", b =>
                {
                    b.Property<string>("MsgId")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("msg_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("created_by");

                    b.Property<string>("MsgContent")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)")
                        .HasColumnName("msg_content");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("updated_by");

                    b.HasKey("MsgId")
                        .HasName("PK_SystemMessage_MsgId");

                    b.ToTable("System_Message", (string)null);
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.SystemRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)")
                        .HasColumnName("normalized_name");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)")
                        .HasColumnName("role_name");

                    b.HasKey("RoleId")
                        .HasName("PK_SystemRole_RoleId");

                    b.ToTable("System_Role", (string)null);
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<string>("Avatar")
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)")
                        .HasColumnName("avatar");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime")
                        .HasColumnName("dob");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit")
                        .HasColumnName("email_confirmed");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gender");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password_hash");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit")
                        .HasColumnName("phone_number_confirmed");

                    b.Property<string>("PhoneVerificationCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone_verification_code");

                    b.Property<DateTime?>("PhoneVerificationExpiry")
                        .HasColumnType("datetime")
                        .HasColumnName("phone_verification_expiry");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("TwoFactorBackupCodes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("two_factor_backup_codes");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("two_factor_enabled");

                    b.Property<string>("TwoFactorSecretKey")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("two_factor_secret_key");

                    b.HasKey("UserId")
                        .HasName("PK_User_UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.Notification", b =>
                {
                    b.HasOne("FPTU_ProposalGuard.Domain.Entities.User", "CreatedBy")
                        .WithMany("NotificationCreations")
                        .HasForeignKey("CreatedById")
                        .IsRequired()
                        .HasConstraintName("FK_Notification_CreatedBy");

                    b.HasOne("FPTU_ProposalGuard.Domain.Entities.User", "Recipient")
                        .WithMany("NotificationRecipients")
                        .HasForeignKey("RecipientId")
                        .HasConstraintName("FK_Notification_Recipient");

                    b.Navigation("CreatedBy");

                    b.Navigation("Recipient");
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.ProjectProposal", b =>
                {
                    b.HasOne("FPTU_ProposalGuard.Domain.Entities.User", "Approver")
                        .WithMany("ProjectProposalApprovers")
                        .HasForeignKey("ApproverId")
                        .HasConstraintName("FK_ProjectProposal_ApproverId");

                    b.HasOne("FPTU_ProposalGuard.Domain.Entities.Semester", "Semester")
                        .WithMany("ProjectProposals")
                        .HasForeignKey("SemesterId")
                        .IsRequired()
                        .HasConstraintName("FK_ProjectProposal_SemesterId");

                    b.HasOne("FPTU_ProposalGuard.Domain.Entities.User", "Submitter")
                        .WithMany("ProjectProposalSubmitters")
                        .HasForeignKey("SubmitterId")
                        .IsRequired()
                        .HasConstraintName("FK_ProjectProposal_SubmitterId");

                    b.Navigation("Approver");

                    b.Navigation("Semester");

                    b.Navigation("Submitter");
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.ProposalHistory", b =>
                {
                    b.HasOne("FPTU_ProposalGuard.Domain.Entities.User", "ProcessBy")
                        .WithMany("ProposalHistories")
                        .HasForeignKey("ProcessById")
                        .IsRequired()
                        .HasConstraintName("PK_ProposalHistory_ProcessById");

                    b.HasOne("FPTU_ProposalGuard.Domain.Entities.ProjectProposal", "ProjectProposal")
                        .WithMany("ProposalHistories")
                        .HasForeignKey("ProjectProposalId")
                        .IsRequired()
                        .HasConstraintName("FK_ProposalHistory_ProjectProposalId");

                    b.Navigation("ProcessBy");

                    b.Navigation("ProjectProposal");
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.ProposalSimilarity", b =>
                {
                    b.HasOne("FPTU_ProposalGuard.Domain.Entities.ProjectProposal", "CheckedProposal")
                        .WithMany("ProposalSimilarityCheckedProposals")
                        .HasForeignKey("CheckedProposalId")
                        .IsRequired()
                        .HasConstraintName("FK_ProposalSimilaryty_CheckedProposalId");

                    b.HasOne("FPTU_ProposalGuard.Domain.Entities.ProjectProposal", "ExistingProposal")
                        .WithMany("ProposalSimilarityExistingProposals")
                        .HasForeignKey("ExistingProposalId")
                        .IsRequired()
                        .HasConstraintName("FK_ProposalSimilaryty_ExistingProposalId");

                    b.Navigation("CheckedProposal");

                    b.Navigation("ExistingProposal");
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.ProposalStudent", b =>
                {
                    b.HasOne("FPTU_ProposalGuard.Domain.Entities.ProjectProposal", "ProjectProposal")
                        .WithOne("ProposalStudent")
                        .HasForeignKey("FPTU_ProposalGuard.Domain.Entities.ProposalStudent", "ProjectProposalId")
                        .IsRequired()
                        .HasConstraintName("FK_ProposalStudent_ProposalId");

                    b.Navigation("ProjectProposal");
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.ProposalSupervisor", b =>
                {
                    b.HasOne("FPTU_ProposalGuard.Domain.Entities.ProjectProposal", "ProjectProposal")
                        .WithOne("ProposalSupervisor")
                        .HasForeignKey("FPTU_ProposalGuard.Domain.Entities.ProposalSupervisor", "ProjectProposalId")
                        .IsRequired()
                        .HasConstraintName("FK_ProposalSupervisor_ProposalId");

                    b.Navigation("ProjectProposal");
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("FPTU_ProposalGuard.Domain.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RefreshToken_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.User", b =>
                {
                    b.HasOne("FPTU_ProposalGuard.Domain.Entities.SystemRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_User_RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.ProjectProposal", b =>
                {
                    b.Navigation("ProposalHistories");

                    b.Navigation("ProposalSimilarityCheckedProposals");

                    b.Navigation("ProposalSimilarityExistingProposals");

                    b.Navigation("ProposalStudent");

                    b.Navigation("ProposalSupervisor");
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.Semester", b =>
                {
                    b.Navigation("ProjectProposals");
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.SystemRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FPTU_ProposalGuard.Domain.Entities.User", b =>
                {
                    b.Navigation("NotificationCreations");

                    b.Navigation("NotificationRecipients");

                    b.Navigation("ProjectProposalApprovers");

                    b.Navigation("ProjectProposalSubmitters");

                    b.Navigation("ProposalHistories");

                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
